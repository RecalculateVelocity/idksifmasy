local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "│〄 Emergency Hamburg│ Made by Daddy Rami", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
    Name = "│Home",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab:AddParagraph("© 2025 Rami Scripting", "")

local Tab1 = Window:MakeTab({
	Name = "│Player Settings",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab1:AddButton({
	Name = "Reset Character",
	Callback = function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.Health = 0
		end
	end    
})

local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local noclipEnabled = false
local noclipConnection = nil
local function SetNoclipMode(enable)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not enable
        end
    end
end

Tab1:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(Value)
        noclipEnabled = Value
        if noclipEnabled then
            SetNoclipMode(true)
            if not noclipConnection then
                noclipConnection = RunService.Stepped:Connect(function()
                    if noclipEnabled then
                        SetNoclipMode(true)
                    end
                end)
            end
        else
            SetNoclipMode(false)
            if noclipConnection then
                noclipConnection:Disconnect()
                noclipConnection = nil
            end
        end
    end    
})

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    if noclipEnabled then
        SetNoclipMode(true)
    end
end)

Tab1:AddToggle({
    Name = "Anti-Death (makes you stand up)",
    Default = false,
    Callback = function(Value)
        if Value then
            getfenv().downed = true
            getfenv().antichanged1 = game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                game.Players.LocalPlayer.Character.Humanoid.Health = 100
            end)
        else
            if getfenv().antichanged1 then
                getfenv().antichanged1:Disconnect()
                getfenv().antichanged1 = nil
            end
            getfenv().downed = false
        end
    end
})

local boostAmount = 5

Tab1:AddSlider({
    Name = "WalkSpeed",
    Min = 0,
    Max = 82,
    Default = 0,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Speed",
    Callback = function(Value)
        boostAmount = Value / 335
    end    
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

game:GetService("RunService").Heartbeat:Connect(function()
    if boostAmount > 0 and humanoid.MoveDirection.Magnitude > 0 then
        local forwardVector = humanoidRootPart.CFrame.LookVector
        humanoidRootPart.CFrame = humanoidRootPart.CFrame + forwardVector * boostAmount
    end
end)

--------------------------------------------------------
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local jumpBoostPower = 50

Tab1:AddSlider({
    Name = "Jump Power",
    Min = 0,
    Max = 100,
    Default = 0,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Power",
    Callback = function(Value)
        jumpBoostPower = Value
    end    
})

humanoid.Jumping:Connect(function()
    if jumpBoostPower > 0 then
        humanoidRootPart.AssemblyLinearVelocity = Vector3.new(
            humanoidRootPart.AssemblyLinearVelocity.X,
            jumpBoostPower,
            humanoidRootPart.AssemblyLinearVelocity.Z
        )
    end
end)
----------------------------------------------------------------------

local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local noclipEnabled = false
local noclipConnection = nil
local function SetNoclipMode(enable)
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not enable
        end
    end
end

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    if noclipEnabled then
        SetNoclipMode(true)
    end
end)

Tab1:AddBind({
    Name = "Noclip Keybind Mod",
    Default = Enum.KeyCode.X,
    Hold = false,
    Callback = function()
        noclipEnabled = not noclipEnabled
        if noclipEnabled then
            SetNoclipMode(true)
            if not noclipConnection then
                noclipConnection = RunService.Stepped:Connect(function()
                    if noclipEnabled then
                        SetNoclipMode(true)
                    end
                end)
            end
        else
            SetNoclipMode(false)
            if noclipConnection then
                noclipConnection:Disconnect()
                noclipConnection = nil
            end
        end
    end    
})

Tab1:AddToggle({
    Name = "Anti-Fall//Damage",
    Default = false,
    Callback = function(Value)
        if Value then
            getfenv().ANTIFALL = true
            getfenv().nofall = game:GetService("RunService").RenderStepped:Connect(function()
                local character = game.Players.LocalPlayer.Character
                if character then
                    local rootPart = character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        local raycastParams = RaycastParams.new()
                        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                        raycastParams.FilterDescendantsInstances = {character}

                        local ray = workspace:Raycast(rootPart.Position, Vector3.new(0, -8, 0), raycastParams)
                        if ray and rootPart.Velocity.Y < -50 then
                            rootPart.Velocity = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end)
        else
            getfenv().ANTIFALL = false
            if getfenv().nofall then
                getfenv().nofall:Disconnect()
                getfenv().nofall = nil
            end
        end
    end
})

Tab1:AddButton({
    Name = "İnfinite Stamina (works on good executors)",
    Callback = function()
        if getfenv().firsttime == nil then
            getfenv().firsttime = true

            local func
            for i, v in pairs(getgc(true)) do
                if type(v) == "function" and debug.getinfo(v).name == "setStamina" then
                    func = v
                    break
                end
            end

            if func then
                local old = hookfunction(func, function(...)
                    local args = {...}
                    return args[1], math.huge
                end)
            end
        end
    end    
})

Tab1:AddSlider({
    Name = "Camera Max Zoom",
    Min = 20,
    Max = 1500,
    Default = 20,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        game.Players.LocalPlayer.CameraMaxZoomDistance = Value
    end    
})

local Tab2 = Window:MakeTab({
	Name = "│Vehicle Mod's",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local player = game.Players.LocalPlayer
local button = script.Parent

local function teleportToVehicle()
	local vehicle = workspace.Vehicles:FindFirstChild(player.Name)
	
	if vehicle then
		if vehicle:FindFirstChild("Body") and vehicle.Body:FindFirstChild("Mass") then
			vehicle.PrimaryPart = vehicle.Body.Mass
		end

		local character = player.Character
		if character and character:FindFirstChild("HumanoidRootPart") then
			local targetLocation = character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -10)
			vehicle:PivotTo(targetLocation)
		end

		local driveSeat = vehicle:FindFirstChild("DriveSeat")
		if driveSeat and driveSeat:IsA("VehicleSeat") then
			driveSeat:Sit(character.Humanoid)
		end
	end
end
Tab2:AddButton({
	Name = "Bring My Car",
	Callback = function()
		teleportToVehicle(teleportToVehicle)
	end    
})
---------------------------------------
local player = game.Players.LocalPlayer 

local function getVehicle()
	return workspace.Vehicles:FindFirstChild(player.Name)
end

local function sitInDriveSeat()
	local vehicle = getVehicle()
	if vehicle and vehicle:FindFirstChild("DriveSeat") then
		local driveSeat = vehicle.DriveSeat
		if driveSeat:IsA("VehicleSeat") then
			driveSeat:Sit(player.Character.Humanoid)
		end
	end
end
Tab2:AddButton({
	Name = "Sit in my Vehicle",
	Callback = function()
		sitInDriveSeat() 
	end    
})
--------------------------------------------------------

local flightGuiEnabled = false
local flightEnabled = false
local flightSpeed = 1
local flightGui
local guiFlightDirection = Vector3.new(0, 0, 0) 
local buttonDirections = {
    W = Vector3.new(0, 0, -1),
    A = Vector3.new(-1, 0, 0),
    S = Vector3.new(0, 0, 1),
    D = Vector3.new(1, 0, 0),
}

local function createFlightGui()
    local screenGui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
    screenGui.Name = "FlightControlGui"
    screenGui.Enabled = false

    local frame = Instance.new("Frame", screenGui)
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.Position = UDim2.new(0.5, 0, 0.8, 0)
    frame.Size = UDim2.new(0, 200, 0, 200)
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    frame.BackgroundTransparency = 0.2
    local drag = Instance.new("UIDragDetector", frame)

    local uiCorner = Instance.new("UICorner", frame)
    uiCorner.CornerRadius = UDim.new(0.1, 0)

    local buttonSize = UDim2.new(0, 60, 0, 60)
    local positions = {
        W = UDim2.new(0.5, -30, 0, 0),
        A = UDim2.new(0, 0, 0.5, -30),
        S = UDim2.new(0.5, -30, 1, -60),
        D = UDim2.new(1, -60, 0.5, -30),
    }
    local rotations = {
        W = 0,
        A = -90,
        S = 180,
        D = 90,
    }

    for key, direction in pairs(buttonDirections) do
        local button = Instance.new("ImageButton", frame)
        button.Name = key .. "Button"
        button.Position = positions[key]
        button.Size = buttonSize
        button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        button.BackgroundTransparency = 0.1
        button.Image = "rbxassetid://11432834725"
        button.Rotation = rotations[key]

        local buttonCorner = Instance.new("UICorner", button)
        buttonCorner.CornerRadius = UDim.new(0.1, 0)

        button.MouseButton1Down:Connect(function()
            guiFlightDirection = guiFlightDirection + direction
        end)
        button.MouseButton1Up:Connect(function()
            if direction == buttonDirections.W then
                guiFlightDirection = Vector3.new(guiFlightDirection.X, guiFlightDirection.Y, 0)
            elseif direction == buttonDirections.A then
                guiFlightDirection = Vector3.new(0, guiFlightDirection.Y, guiFlightDirection.Z)
            elseif direction == buttonDirections.S then
                guiFlightDirection = Vector3.new(guiFlightDirection.X, guiFlightDirection.Y, 0)
            elseif direction == buttonDirections.D then
                guiFlightDirection = Vector3.new(0, guiFlightDirection.Y, guiFlightDirection.Z)
            end
        end)
    end

    return screenGui
end

local function toggleFlightGui(Value)
    if not flightGui then
        flightGui = createFlightGui()
    end
    guiFlightDirection = Vector3.zero
    flightGui.Enabled = Value
    flightGuiEnabled = Value
end

-- Define UserInputService
local UserInputService = game:GetService("UserInputService")

Tab2:AddToggle({
    Name = "Car Fly Enable/Disable",
    Default = false,
    Callback = function(Value)
        flightEnabled = Value
    end
})

Tab2:AddBind({
    Name = "Car fly Keybind",
    Default = Enum.KeyCode.X,
    Hold = false,
    Callback = function()
        flightEnabled = not flightEnabled
        toggleCarFlyButton:Set(flightEnabled)
    end   
})

Tab2:AddSlider({ 
    Name = "Car Fly Speed",
    Min = 10,
    Max = 150, 
    Default = (flightSpeed * 50),
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 10,
    ValueName = "Speed", 
    Callback = function(Value)
        flightSpeed = (Value / 50)
    end    
})

Tab2:AddToggle({
    Name = "Mobile Fly Menu",
    Default = false,
    Callback = function(Value)
        toggleFlightGui(Value)
    end
})

-- Render step for movement
game:GetService("RunService").RenderStepped:Connect(function() 
    local Character = game.Players.LocalPlayer.Character
    if flightEnabled then
        if Character then
            if Character:FindFirstChild("Humanoid") then
                local SeatPart = Character:FindFirstChild("Humanoid").SeatPart
                if SeatPart and SeatPart.Name == "DriveSeat" then
                    local Vehicle = SeatPart.Parent
                    if Vehicle then
                        Character.Parent = Vehicle
                        if not Vehicle.PrimaryPart then
                            Vehicle.PrimaryPart = SeatPart
                        end

                        local PrimaryPartCFrame = Vehicle:GetPrimaryPartCFrame()
                        local cameraLook = workspace.CurrentCamera.CFrame.LookVector

                        Vehicle:SetPrimaryPartCFrame(CFrame.new(PrimaryPartCFrame.Position, PrimaryPartCFrame.Position + cameraLook) *
                            CFrame.new(
                                ((UserInputService:IsKeyDown(Enum.KeyCode.D) and flightSpeed or 0) - 
                                 (UserInputService:IsKeyDown(Enum.KeyCode.A) and flightSpeed or 0)) + guiFlightDirection.X * flightSpeed,
                                ((UserInputService:IsKeyDown(Enum.KeyCode.E) and flightSpeed / 2 or 0) - 
                                 (UserInputService:IsKeyDown(Enum.KeyCode.Q) and flightSpeed / 2 or 0)) + guiFlightDirection.Y * flightSpeed,
                                ((UserInputService:IsKeyDown(Enum.KeyCode.S) and flightSpeed or 0) - 
                                 (UserInputService:IsKeyDown(Enum.KeyCode.W) and flightSpeed or 0)) + guiFlightDirection.Z * flightSpeed
                            ))
                        SeatPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                        SeatPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                    end
                end
            end
        end
    else
        if Character then
            Character.Parent = defaultCharacterParent or Character.Parent
            defaultCharacterParent = Character.Parent
        end
    end
end)

------------------------------
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

local VehiclesFolder = Workspace:WaitForChild("Vehicles")

local function onSliderValueChanged(value)
    local playerVehicle = VehiclesFolder:FindFirstChild(LocalPlayer.Name)
    if playerVehicle and playerVehicle:IsA("Model") and playerVehicle:GetAttribute("MaxAccelerateForce") ~= nil then
        playerVehicle:SetAttribute("MaxAccelerateForce", value)
    end
end

VehiclesFolder.ChildAdded:Connect(function(child)
    if child.Name == LocalPlayer.Name and child:IsA("Model") then
    end
end)

VehiclesFolder.ChildRemoved:Connect(function(child)
    if child.Name == LocalPlayer.Name then
    end
end)

Tab2:AddSlider({
    Name = "MaxAccelerateForce Slider",
    Min = 170,
    Max = 20000,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "MaxAccelerateForce",
    Callback = onSliderValueChanged
})
 -----------------------------------------------------
 local function onSliderValueChanged(value)
    local playerVehicle = VehiclesFolder:FindFirstChild(LocalPlayer.Name)
    if playerVehicle and playerVehicle:IsA("Model") and playerVehicle:GetAttribute("ReverseMaxSpeed") ~= nil then
        playerVehicle:SetAttribute("ReverseMaxSpeed", value)
    end
end

VehiclesFolder.ChildAdded:Connect(function(child)
    if child.Name == LocalPlayer.Name and child:IsA("Model") then
    end
end)

VehiclesFolder.ChildRemoved:Connect(function(child)
    if child.Name == LocalPlayer.Name then
    end
end)

Tab2:AddSlider({
    Name = "ReverseMaxSpeed",
    Min = 25,
    Max = 500,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "ReverseMaxSpeed",
    Callback = onSliderValueChanged
})
 -----------------------------------------------------
 local function onSliderValueChanged(value)
    local playerVehicle = VehiclesFolder:FindFirstChild(LocalPlayer.Name)
    if playerVehicle and playerVehicle:IsA("Model") and playerVehicle:GetAttribute("MaxSpeed") ~= nil then
        playerVehicle:SetAttribute("MaxSpeed", value)
    end
end

VehiclesFolder.ChildAdded:Connect(function(child)
    if child.Name == LocalPlayer.Name and child:IsA("Model") then
    end
end)

VehiclesFolder.ChildRemoved:Connect(function(child)
    if child.Name == LocalPlayer.Name then
    end
end)

Tab2:AddSlider({
    Name = "MaxSpeed",
    Min = 170,
    Max = 400,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "MaxSpeed",
    Callback = onSliderValueChanged
})
 -----------------------------------------------------
 local function onSliderValueChanged(value)
    local playerVehicle = VehiclesFolder:FindFirstChild(LocalPlayer.Name)
    if playerVehicle and playerVehicle:IsA("Model") and playerVehicle:GetAttribute("MaxBrakeForce") ~= nil then
        playerVehicle:SetAttribute("MaxBrakeForce", value)
    end
end

VehiclesFolder.ChildAdded:Connect(function(child)
    if child.Name == LocalPlayer.Name and child:IsA("Model") then
    end
end)

VehiclesFolder.ChildRemoved:Connect(function(child)
    if child.Name == LocalPlayer.Name then
    end
end)

Tab2:AddSlider({
    Name = "MaxBrakeForce",
    Min = 1200,
    Max = 50000,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "MaxBrakeForce",
    Callback = onSliderValueChanged
})

-----------------------------------------------------------
local lplr = game:GetService("Players").LocalPlayer

local settings = {
    fuelcapacity = false,
    inffual = false,
    godcar = false,

}
task.defer(function()
    while task.wait() do
        if settings.inffual then
            workspace.Vehicles[lplr.Name]:SetAttribute("CurrentFuel", math.huge)
        end
    end
end)

Tab2:AddToggle({
	Name = "İnfinite Fuel",
	Default = false,
	Callback = function(Value)
		settings.inffual = Value
	end    
})

task.defer(function()
    while task.wait() do
        if settings.fuelcapacity then
            workspace.Vehicles[lplr.Name]:SetAttribute("IsOn", true)
        end
    end
end)

Tab2:AddToggle({
	Name = "Always Work (when car crashed)",
	Default = false,
	Callback = function(Value)
		settings.fuelcapacity = Value
	end    
})

--god car
task.defer(function()
    while task.wait() do
        if settings.godcar then
            workspace.Vehicles[lplr.Name]:SetAttribute("CurrentHealth", math.huge)
        end
    end
end)

Tab2:AddToggle({
	Name = "Car Extra Health",
	Default = false,
	Callback = function(Value)
		settings.godcar = Value
	end    
})

local Tab3 = Window:MakeTab({
	Name = "│Teleport",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local TweenService = game:GetService("TweenService")

Tab3:AddButton({
    Name = "Teleport to Nearest Dealer",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        player.CharacterAdded:Connect(function(newCharacter)
            character = newCharacter
        end)

        local vehicle = workspace.Vehicles:FindFirstChild(player.Name)
        if vehicle then
            vehicle.PrimaryPart = vehicle.Body.Mass

            local dealersFolder = workspace:FindFirstChild("Dealers")
            if dealersFolder then
                local closestHead
                local closestDistance = math.huge

                -- En yakın dealer'ı bul
                for _, dealer in pairs(dealersFolder:GetChildren()) do
                    if dealer:IsA("Model") and dealer:FindFirstChild("Head") then
                        local head = dealer.Head
                        local distance = (character.HumanoidRootPart.Position - head.Position).Magnitude

                        -- En yakın dealer'ı tespit et
                        if distance < closestDistance then
                            closestDistance = distance
                            closestHead = head
                        end
                    end
                end

                -- Eğer en yakın dealer bulunmuşsa, aracı ve karakteri ona taşır
                if closestHead then
                    local targetCFrame = closestHead.CFrame + Vector3.new(0, 5, 0)

                    -- 🚗 **Karakterin Araca Oturması**
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    local driveSeat = vehicle:FindFirstChild("DriveSeat")

                    if humanoid and driveSeat then
                        if humanoid.SeatPart ~= driveSeat then
                            driveSeat:Sit(humanoid)
                        end

                        -- Oturana kadar bekle
                        while humanoid.SeatPart ~= driveSeat do
                            task.wait()
                        end
                    end

                    -- 🚗 **Araç için Yükseklik ve Hedefe Hareket**
                    local hoverHeight = 200  -- Yükseklik
                    local speed = 60         -- Hız

                    -- **Araç Modelinin Mass'a Bağlanmasını Sağlayan Fonksiyon**
                    local function syncVehicle()
                        vehicle:SetPrimaryPartCFrame(vehicle.PrimaryPart.CFrame)
                    end

                    -- **Hareket Fonksiyonu**
                    local function moveVehicle(targetCFrame, duration)
                        -- **Bağlantıyı oluştur ve Mass'ı takip etmesini sağla**
                        updateConnection = game:GetService("RunService").RenderStepped:Connect(syncVehicle)

                        -- **Tween başlat**
                        local tween = TweenService:Create(vehicle.PrimaryPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = targetCFrame})
                        tween:Play()
                        tween.Completed:Wait()

                        -- **Bağlantıyı kaldır (artık hareket etmeyeceği için)**
                        updateConnection:Disconnect()
                    end

                    -- **1️⃣ Önce 200 birim yukarı çık**
                    local upCFrame = vehicle.PrimaryPart.CFrame + Vector3.new(0, hoverHeight, 0)
                    moveVehicle(upCFrame, 2)

                    -- **2️⃣ Hedefin üzerine doğru hareket et**
                    local targetCFrameVehicle = CFrame.new(targetCFrame.Position.X, vehicle.PrimaryPart.Position.Y, targetCFrame.Position.Z)
                    local travelTime = (vehicle.PrimaryPart.Position - targetCFrameVehicle.Position).magnitude / speed
                    moveVehicle(targetCFrameVehicle, travelTime)

                    -- **3️⃣ Yavaşça aşağı in**
                    moveVehicle(targetCFrame, 2)
                end
            end
        end
    end
})

Tab3:AddButton({
    Name = "TP to Robbable Vending Machine",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        local playerPos = character.PrimaryPart.Position
        local vehicles = workspace.Vehicles
        local vendingMachines = workspace.Robberies.VendingMachines

        local targetPart, minDistance = nil, math.huge

        -- Vending machine'leri kontrol et
        for _, model in pairs(vendingMachines:GetChildren()) do
            for _, part in pairs(model:GetChildren()) do
                if part:IsA("Part") and part.Color == Color3.fromRGB(73, 147, 0) then
                    local distance = (playerPos - part.Position).Magnitude
                    if distance < minDistance then
                        minDistance = distance
                        targetPart = part
                    end
                end
            end
        end

        if targetPart then
            local location = CFrame.new(targetPart.Position)
            local vehicle = vehicles:FindFirstChild(player.Name)

            if vehicle then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local driveSeat = vehicle:FindFirstChild("DriveSeat")

                if not humanoid or not driveSeat then return end

                -- 🚗 **Karakteri Araca Oturt**
                if humanoid.SeatPart ~= driveSeat then
                    driveSeat:Sit(humanoid)
                end

                -- Oturana kadar bekle
                while humanoid.SeatPart ~= driveSeat do
                    task.wait()
                end

                -- 🚀 **ARAÇ VE MASS SENKRONİZASYONU**
                vehicle.PrimaryPart = vehicle.Body.Mass
                local hoverHeight = 200  -- **Yükseklik (200 birim havaya çıkacak)**
                local speed = 60         -- **Sabit hızda ilerleme**
                local updateConnection   -- **Mass ve araç bağlantısı**

                -- **Araç Modelinin Mass'a Bağlanmasını Sağlayan Fonksiyon**
                local function syncVehicle()
                    vehicle:SetPrimaryPartCFrame(vehicle.PrimaryPart.CFrame)
                end

                -- **Hareket Fonksiyonu**
                local function moveVehicle(targetCFrame, duration)
                    -- **Bağlantıyı oluştur ve Mass'ı takip etmesini sağla**
                    updateConnection = game:GetService("RunService").RenderStepped:Connect(syncVehicle)

                    -- **Tween başlat**
                    local tween = game:GetService("TweenService"):Create(vehicle.PrimaryPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = targetCFrame})
                    tween:Play()
                    tween.Completed:Wait()

                    -- **Bağlantıyı kaldır (artık hareket etmeyeceği için)**
                    updateConnection:Disconnect()
                end

                -- **1️⃣ Önce 200 birim yukarı çık**
                local upCFrame = vehicle.PrimaryPart.CFrame + Vector3.new(0, hoverHeight, 0)
                moveVehicle(upCFrame, 2)

                -- **2️⃣ Hedefin üzerine doğru hareket et**
                local targetCFrame = CFrame.new(location.Position.X, vehicle.PrimaryPart.Position.Y, location.Position.Z)
                local travelTime = (vehicle.PrimaryPart.Position - targetCFrame.Position).magnitude / speed
                moveVehicle(targetCFrame, travelTime)

                -- **3️⃣ Yavaşça aşağı in**
                moveVehicle(location, 2)
            end
        else
            -- Eğer hedef vending machine bulunamazsa bildirim gönder
            OrionLib:MakeNotification({
                Name = "Not Founded",
                Content = "Robbable Vending Machine not Founded",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})

local TweenService = game:GetService("TweenService")

local playerDropdown = Tab3:AddDropdown({
    Name = "Teleport Player with Car",
    Default = "",
    Options = {},
    Callback = function(selectedPlayer)
        local vehicle = workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name)

        if not vehicle then
            OrionLib:MakeNotification({
                Name = "Can t not find your car",
                Content = "Car is not available",
                Image = "rbxassetid://4483345998",
                Time = 1.5
            })
            return
        end

        local body = vehicle:FindFirstChild("Body")
        local mass = body and body:FindFirstChild("Mass")
        if not mass then return end

        vehicle.PrimaryPart = mass

        local targetPlayer = game.Players:FindFirstChild(selectedPlayer)
        if not (targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then
            OrionLib:MakeNotification({
                Name = "Warning!",
                Content = "Player is far away",
                Image = "rbxassetid://4483345998",
                Time = 1.5
            })
            return
        end

        local targetLocation = targetPlayer.Character.HumanoidRootPart.CFrame

        local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            local driveSeat = vehicle:FindFirstChild("DriveSeat")
            if driveSeat then
                driveSeat:Sit(humanoid)
            end
        end

        task.wait(0.5)

        local startCFrame = mass.CFrame
        local midCFrame = startCFrame + Vector3.new(0, 200, 0)
        local targetCFrame = CFrame.new(targetLocation.Position.X, midCFrame.Position.Y, targetLocation.Position.Z)
        local finalCFrame = targetLocation

        local speed = 70

        local function moveTo(target)
            local distance = (mass.Position - target.Position).Magnitude
            local time = distance / speed
            local tweenInfo = TweenInfo.new(time, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)

            local massTween = TweenService:Create(mass, tweenInfo, {CFrame = target})
            massTween:Play()

            local vehicleTween = TweenService:Create(vehicle, tweenInfo, {PrimaryPart = mass})
            vehicleTween:Play()

            massTween.Completed:Wait()
        end

        moveTo(midCFrame)      -- 200 birim yukarı çık
        moveTo(targetCFrame)   -- Hedef oyuncunun üstüne git
        moveTo(finalCFrame)    -- Aşağı in
    end
})

local function updatePlayerList()
    local players = {}
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Name ~= game.Players.LocalPlayer.Name then
            table.insert(players, player.Name)
        end
    end

    playerDropdown:Refresh(players, true)
end

updatePlayerList()
game.Players.PlayerAdded:Connect(updatePlayerList)
game.Players.PlayerRemoving:Connect(updatePlayerList)

local TweenService = game:GetService("TweenService")

Tab3:AddDropdown({
    Name = "Normal Places",
    Default = "1",
    Options = {"Prison Out", "Prison In", "Hospital", "Adac", "Dealership", "Fire Station", "Smuggler (near clothing store)", "Truck Company", "Bus Company"},
    Callback = function(Value)
        local locations = {
            ["Prison Out"] = CFrame.new(-615.5797729492188, 5.289504051208496, 2862.23681640625),
            ["Prison In"] = CFrame.new(-572.1055297851562, 6.382352352142334, 3061.3740234375),
            ["Fire Station"] = CFrame.new(-1025.360595703125, 4.500086784362793, 3899.155029296875),
            ["Parking Garage"] = CFrame.new(-1001.6951904296875, 10.850526809692383, 3655.860595703125),
            ["Truck Company"] = CFrame.new(704.4508666992188, 4.229461669921875, 1479.9267578125),
            ["Smuggler (near clothing store)"] = CFrame.new(796.5571899414062, -18.67022705078125, -1526.3787841796875),
            ["Adac"] = CFrame.new(-120.60669708251953, 4.597031116485596, 430.81805419921875),
            ["Bus Company"] = CFrame.new(-1682.2969970703125, 8.779464721679688, -1273.07763671875),
            ["Hospital"] = CFrame.new(-278.833740234375, 7.7454142570495605, 1085.7965087890625),
            ["Polica Station"] = CFrame.new(-1702.70166015625, 4.607900142669678, 2723.564697265625),
            ["Dealership"] = CFrame.new(-1415.6986083984375, 4.552238464355469, 940.5262451171875),
        }

        local location = locations[Value]

        if location then
            local vehicle = workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name)

            if vehicle then
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local driveSeat = vehicle:FindFirstChild("DriveSeat")

                if not humanoid or not driveSeat then return end

                -- 🚗 **Karakteri Araca Oturt**
                if humanoid.SeatPart ~= driveSeat then
                    driveSeat:Sit(humanoid)
                end

                -- Oturana kadar bekle
                while humanoid.SeatPart ~= driveSeat do
                    task.wait()
                end

                -- 🚀 **ARAÇ VE MASS SENKRONİZASYONU**
                vehicle.PrimaryPart = vehicle.Body.Mass
                local hoverHeight = 200  -- **Yükseklik (200 birim havaya çıkacak)**
                local speed = 60          -- **Sabit hızda ilerleme**
                local updateConnection    -- **Mass ve araç bağlantısı**

                -- **Araç Modelinin Mass'a Bağlanmasını Sağlayan Fonksiyon**
                local function syncVehicle()
                    vehicle:SetPrimaryPartCFrame(vehicle.PrimaryPart.CFrame)
                end

                -- **Hareket Fonksiyonu**
                local function moveVehicle(targetCFrame, duration)
                    -- **Bağlantıyı oluştur ve Mass'ı takip etmesini sağla**
                    updateConnection = game:GetService("RunService").RenderStepped:Connect(syncVehicle)

                    -- **Tween başlat**
                    local tween = TweenService:Create(vehicle.PrimaryPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = targetCFrame})
                    tween:Play()
                    tween.Completed:Wait()

                    -- **Bağlantıyı kaldır (artık hareket etmeyeceği için)**
                    updateConnection:Disconnect()
                end

                -- **1️⃣ Önce 200 birim yukarı çık**
                local upCFrame = vehicle.PrimaryPart.CFrame + Vector3.new(0, hoverHeight, 0)
                moveVehicle(upCFrame, 2)

                -- **2️⃣ Hedefin üzerine doğru hareket et**
                local targetCFrame = CFrame.new(location.Position.X, vehicle.PrimaryPart.Position.Y, location.Position.Z)
                local travelTime = (vehicle.PrimaryPart.Position - targetCFrame.Position).magnitude / speed
                moveVehicle(targetCFrame, travelTime)

                -- **3️⃣ Yavaşça aşağı in**
                moveVehicle(location, 2)
            end
        end
    end
})

--------------------------------------------------------
-------------------------------------
local TweenService = game:GetService("TweenService")

Tab3:AddDropdown({
    Name = "Robbery Places",
    Default = "1",
    Options = {"Bank", "Jewellery", "Erwin Club", "Gas-N-Go Fuel", "Ares Fuel", "Tool Shop", "Farm Shop", "Osso Fuel", "Container Ship", "Clothing Store"},
    Callback = function(Value)
        local locations = {
            ["Bank"] = CFrame.new(-1183.296, 10.912, 3228.297),
            ["Jewellery"] = CFrame.new(-407.536, 21.950, 3516.854),
            ["Erwin Club"] = CFrame.new(-1856.962, 5.706, 2990.518),
            ["Gas-N-Go Fuel"] = CFrame.new(-1560.674, 3.944, 3813.656),
            ["Ares Fuel"] = CFrame.new(-824.447, 4.182, 1512.941),
            ["Tool Shop"] = CFrame.new(-767.815, 4.374, 663.494),
            ["Farm Shop"] = CFrame.new(-887.220, 5.831, -1150.356),
            ["Osso Fuel"] = CFrame.new(-27.464, 5.245, -749.413),
            ["Container Ship"] = CFrame.new(1191.836, 29.550, 2140.703),
            ["Clothing Store"] = CFrame.new(440.400, 5.520, -1438.111),
        }

        local location = locations[Value]

        if location then
            local vehicle = workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name)

            if vehicle then
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local driveSeat = vehicle:FindFirstChild("DriveSeat")

                if not humanoid or not driveSeat then return end

                -- 🚗 **Karakteri Araca Oturt**
                if humanoid.SeatPart ~= driveSeat then
                    driveSeat:Sit(humanoid)
                end

                -- Oturana kadar bekle
                while humanoid.SeatPart ~= driveSeat do
                    task.wait()
                end

                -- 🚀 **ARAÇ VE MASS SENKRONİZASYONU**
                vehicle.PrimaryPart = vehicle.Body.Mass
                local hoverHeight = 200  -- **Yükseklik (200 birim havaya çıkacak)**
                local speed = 60          -- **Sabit hızda ilerleme**
                local updateConnection    -- **Mass ve araç bağlantısı**

                -- **Araç Modelinin Mass'a Bağlanmasını Sağlayan Fonksiyon**
                local function syncVehicle()
                    vehicle:SetPrimaryPartCFrame(vehicle.PrimaryPart.CFrame)
                end

                -- **Hareket Fonksiyonu**
                local function moveVehicle(targetCFrame, duration)
                    -- **Bağlantıyı oluştur ve Mass'ı takip etmesini sağla**
                    updateConnection = game:GetService("RunService").RenderStepped:Connect(syncVehicle)

                    -- **Tween başlat**
                    local tween = TweenService:Create(vehicle.PrimaryPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = targetCFrame})
                    tween:Play()
                    tween.Completed:Wait()

                    -- **Bağlantıyı kaldır (artık hareket etmeyeceği için)**
                    updateConnection:Disconnect()
                end

                -- **1️⃣ Önce 200 birim yukarı çık**
                local upCFrame = vehicle.PrimaryPart.CFrame + Vector3.new(0, hoverHeight, 0)
                moveVehicle(upCFrame, 2)

                -- **2️⃣ Hedefin üzerine doğru hareket et**
                local targetCFrame = CFrame.new(location.Position.X, vehicle.PrimaryPart.Position.Y, location.Position.Z)
                local travelTime = (vehicle.PrimaryPart.Position - targetCFrame.Position).magnitude / speed
                moveVehicle(targetCFrame, travelTime)

                -- **3️⃣ Yavaşça aşağı in**
                moveVehicle(location, 2)
            end
        end
    end
})

local Tab4 = Window:MakeTab({
	Name = "│Esp",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Drawing = Drawing

local LocalPlayer = Players.LocalPlayer
local ESPEnabled = false
local UseTeamColors = false
local ESPSize = 5
local ESPObjects = {}

local function CreateESP(player)
    if player == LocalPlayer then return end

    local function UpdateESP()
        local espData = ESPObjects[player]
        if not espData then return end

        local character = player.Character
        local head = character and character:FindFirstChild("Head")
        local esp = espData.DrawingObject

        if head and head.Parent then
            local screenPosition, onScreen = workspace.CurrentCamera:WorldToViewportPoint(head.Position + Vector3.new(0, 2, 0))
            esp.Visible = onScreen and ESPEnabled

            if esp.Visible then
                esp.Position = Vector2.new(screenPosition.X, screenPosition.Y)
                esp.Size = ESPSize

                if UseTeamColors then
                    esp.Color = player.Team and player.Team.TeamColor.Color or Color3.new(1, 1, 1)
                else
                    esp.Color = Color3.new(1, 1, 1)
                end
            end
        else
            esp.Visible = false
        end
    end

    local esp = Drawing.new("Text")
    esp.Text = player.Name
    esp.Size = ESPSize
    esp.Center = true
    esp.Outline = true
    esp.Visible = ESPEnabled

    ESPObjects[player] = {
        DrawingObject = esp,
        Connection = RunService.RenderStepped:Connect(UpdateESP)
    }
end

local function RemoveESP(player)
    if ESPObjects[player] then
        ESPObjects[player].DrawingObject:Remove()
        ESPObjects[player].Connection:Disconnect()
        ESPObjects[player] = nil
    end
end

local function ToggleESP(value)
    ESPEnabled = value
    for _, obj in pairs(ESPObjects) do
        obj.DrawingObject.Visible = ESPEnabled
    end
end

local function ToggleTeamColors(value)
    UseTeamColors = value
end

local function SetESPSize(value)
    ESPSize = value
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            RemoveESP(player)
            CreateESP(player)
        end)

        player:GetPropertyChangedSignal("Team"):Connect(function()
            if ESPObjects[player] then
                ESPObjects[player].DrawingObject.Color = player.Team and player.Team.TeamColor.Color or Color3.new(1, 1, 1)
            end
        end)
    end
end)

Players.PlayerRemoving:Connect(RemoveESP)

for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        if player.Character then
            CreateESP(player)
        end

        player.CharacterAdded:Connect(function()
            RemoveESP(player)
            CreateESP(player)
        end)

        player:GetPropertyChangedSignal("Team"):Connect(function()
            if ESPObjects[player] then
                ESPObjects[player].DrawingObject.Color = player.Team and player.Team.TeamColor.Color or Color3.new(1, 1, 1)
            end
        end)
    end
end

Tab4:AddToggle({
    Name = "Name ESP",
    Default = false,
    Callback = ToggleESP
})

Tab4:AddSlider({
    Name = "Name ESP Size",
    Min = 1,
    Max = 20,
    Default = 5,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "units",
    Callback = SetESPSize
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local ESPEnabled = false

Tab4:AddToggle({
	Name = "HealthBar ESP",
	Default = false,
	Callback = function(Value)
		ESPEnabled = Value
		if not ESPEnabled then
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer then
					local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
					if humanoid then
						local healthBar = humanoid:FindFirstChild("_HealthBar")
						if healthBar then
							healthBar.Visible = false
						end
					end
				end
			end
		end
	end    
})

local function createHealthBar(player)
    local healthBar = Drawing.new("Square")
    healthBar.Visible = false
    healthBar.Thickness = 0.5
    healthBar.Transparency = 1

    local healthFill = Drawing.new("Square")
    healthFill.Visible = false
    healthFill.Filled = true
    healthFill.Thickness = 0.5
    healthFill.Transparency = 1

    local function update()
        if not ESPEnabled then
            healthBar.Visible = false
            healthFill.Visible = false
            return
        end

        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = player.Character.Humanoid
            local rootPart = player.Character.HumanoidRootPart

            local screenPosition, onScreen = workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)

            if onScreen and humanoid.Health > 0 then
                local healthPercent = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
                local barWidth = 3
                local barHeight = 25

                healthBar.Size = Vector2.new(barWidth, barHeight)
                healthBar.Position = Vector2.new(screenPosition.X + 15, screenPosition.Y - barHeight / 2)
                healthBar.Color = Color3.new(0, 0, 0)
                healthBar.Visible = true

                healthFill.Size = Vector2.new(barWidth, barHeight * healthPercent)
                healthFill.Position = Vector2.new(healthBar.Position.X, healthBar.Position.Y + barHeight * (1 - healthPercent))
                healthFill.Color = healthPercent <= 0.25 and Color3.new(1, 0, 0) or Color3.new(0, 1, 0)
                healthFill.Visible = true
            else
                healthBar.Visible = false
                healthFill.Visible = false
            end
        else
            healthBar.Visible = false
            healthFill.Visible = false
        end
    end

    local connection
    connection = RunService.RenderStepped:Connect(update)

    player.AncestryChanged:Connect(function()
        if not player:IsDescendantOf(Players) then
            connection:Disconnect()
            healthBar:Remove()
            healthFill:Remove()
        end
    end)
end

for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        createHealthBar(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        createHealthBar(player)
    end
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local ESPEnabled = false
local UseTeamColor = false

Tab4:AddToggle({
    Name = "Box ESP",
    Default = false,
    Callback = function(Value)
        ESPEnabled = Value
        if not ESPEnabled then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    local box = player:FindFirstChild("_Box")
                    if box then
                        box.Visible = false
                    end
                end
            end
        end
    end
})

Tab4:AddToggle({
    Name = "Use Team Colors",
    Default = false,
    Callback = function(Value)
        UseTeamColor = Value
        if ToggleTeamColors then
            ToggleTeamColors(Value)
        end
    end
})

local function createBox(player)
    local box = Drawing.new("Square")
    box.Visible = false
    box.Thickness = 1
    box.Transparency = 1
    box.Color = Color3.new(1, 0, 0)

    local function update()
        if not ESPEnabled then
            box.Visible = false
            return
        end

        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            local rootPart = character.HumanoidRootPart

            if UseTeamColor and player.Team then
                box.Color = player.Team.TeamColor.Color
            else
                box.Color = Color3.new(1, 0, 0)
            end

            local cframe, size = character:GetBoundingBox()

            local adjustedHeight = math.clamp(size.Y, 4, 7)
            local adjustedWidth = math.clamp(size.X, 2, 4)
            
            size = Vector3.new(adjustedWidth, adjustedHeight, size.Z)

            local minScreenPos, maxScreenPos = Vector2.new(math.huge, math.huge), Vector2.new(-math.huge, -math.huge)
            for _, corner in ipairs({
                Vector3.new(-size.X / 2, size.Y / 2, -size.Z / 2),
                Vector3.new(size.X / 2, size.Y / 2, -size.Z / 2),
                Vector3.new(-size.X / 2, -size.Y / 2, -size.Z / 2),
                Vector3.new(size.X / 2, -size.Y / 2, -size.Z / 2),
                Vector3.new(-size.X / 2, size.Y / 2, size.Z / 2),
                Vector3.new(size.X / 2, size.Y / 2, size.Z / 2),
                Vector3.new(-size.X / 2, -size.Y / 2, size.Z / 2),
                Vector3.new(size.X / 2, -size.Y / 2, size.Z / 2),
            }) do
                local worldPos = (cframe * corner)
                local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(worldPos)
                if onScreen then
                    minScreenPos = Vector2.new(
                        math.min(minScreenPos.X, screenPos.X),
                        math.min(minScreenPos.Y, screenPos.Y)
                    )
                    maxScreenPos = Vector2.new(
                        math.max(maxScreenPos.X, screenPos.X),
                        math.max(maxScreenPos.Y, screenPos.Y)
                    )
                else
                    box.Visible = false
                    return
                end
            end

            box.Size = maxScreenPos - minScreenPos
            box.Position = minScreenPos
            box.Visible = true
        else
            box.Visible = false
        end
    end

    local connection
    connection = RunService.RenderStepped:Connect(update)

    player.AncestryChanged:Connect(function()
        if not player:IsDescendantOf(Players) then
            connection:Disconnect()
            box:Remove()
        end
    end)
end

for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        createBox(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        createBox(player)
    end
end)

--------------------------------------------------------------------------------
-- 1) "AUTO SHOOT" TAB ve "Silent Aim Options" SECTION OLUŞTURMA
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- 1) "AUTO SHOOT" TAB ve "Silent Aim Options" SECTION OLUŞTURMA
--------------------------------------------------------------------------------
local SilentAimTab = Window:MakeTab({
    Name = "│Auto Shoot",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local SilentAimSection = SilentAimTab:AddSection({
    Name = "Silent Aim Options"
})

--------------------------------------------------------------------------------
-- 2) SILENT AIM DEĞİŞKENLERİ ve TOGGLE’LAR
--------------------------------------------------------------------------------

local SilentAimEnabled = false
SilentAimSection:AddToggle({
    Name = "Enable Auto Shoot",
    Default = false,
    Callback = function(Value)
        SilentAimEnabled = Value
    end
})

local HitParts = { "Head", "HumanoidRootPart", "Torso", "Left Arm", "Right Arm" }
local SelectedHitParts = { "Head", "HumanoidRootPart" }
SilentAimSection:AddDropdown({
    Name = "Target Part",
    Options = HitParts,
    Default = "Head",
    Multi = true,
    Callback = function(Value)
        if typeof(Value) == "table" then
            SelectedHitParts = Value
        elseif typeof(Value) == "string" then
            SelectedHitParts = { Value }
        else
            warn("Dropdown returned invalid value. Resetting to default hit parts.")
            SelectedHitParts = { "Head", "HumanoidRootPart" }
        end
    end
})

local PredictionEnabled = false
SilentAimSection:AddToggle({
    Name = "Enable Prediction",
    Default = false,
    Callback = function(Value)
        PredictionEnabled = Value
    end
})

local TeamCheck = false
SilentAimSection:AddToggle({
    Name = "Team Check",
    Default = false,
    Callback = function(Value)
        TeamCheck = Value
    end
})

local KnockedCheck = false
SilentAimSection:AddToggle({
    Name = "Knocked Check",
    Default = false,
    Callback = function(Value)
        KnockedCheck = Value
    end
})

local VisibleCheck = false
SilentAimSection:AddToggle({
    Name = "Visible Check",
    Default = false,
    Callback = function(Value)
        VisibleCheck = Value
    end
})

--------------------------------------------------------------------------------
-- 3) FOV SETTINGS SECTION
--------------------------------------------------------------------------------

local FovSection = SilentAimTab:AddSection({
    Name = "FOV Settings"
})

local FovEnabled = false
FovSection:AddToggle({
    Name = "Enable FOV",
    Default = false,
    Callback = function(Value)
        FovEnabled = Value
    end
})

local FovSize = 200
FovSection:AddSlider({
    Name = "FOV Size",
    Min = 50,
    Max = 500,
    Default = 200,
    Increment = 10,
    Callback = function(Value)
        FovSize = Value
    end
})

local FovColor = Color3.fromRGB(255, 255, 255)
FovSection:AddColorpicker({
    Name = "FOV Color",
    Default = Color3.fromRGB(255, 255, 255),
    Callback = function(Value)
        FovColor = Value
    end
})

--------------------------------------------------------------------------------
-- 4) FOV ÇEMBERİ (Drawing API)
--    + FOV ÜZERİNDE "ENABLED" / "DISABLED" METNİ
--------------------------------------------------------------------------------

local FovCircle = Drawing.new("Circle")
FovCircle.Visible = FovEnabled
FovCircle.Radius = FovSize
FovCircle.Color = FovColor
FovCircle.Filled = false
FovCircle.Thickness = 2

-- Yeni eklediğimiz yazı (Text) nesnesi
local FovStatusText = Drawing.new("Text")
FovStatusText.Visible = false
FovStatusText.Center = true         -- Ortalı
FovStatusText.Outline = true        -- Siyah kenarlık
FovStatusText.OutlineColor = Color3.fromRGB(0,0,0)
FovStatusText.Size = 18             -- Yazı boyutu
FovStatusText.Font = 2              -- Yazı tipi (0,1,2,3 vs.)

game:GetService("RunService").RenderStepped:Connect(function()
    if FovEnabled then
        -- Çember güncelleniyor
        FovCircle.Visible = true
        FovCircle.Position = Vector2.new(
            game:GetService("Workspace").CurrentCamera.ViewportSize.X / 2,
            game:GetService("Workspace").CurrentCamera.ViewportSize.Y / 2
        )
        FovCircle.Radius = FovSize
        FovCircle.Color = FovColor

        -- Metni de gösterelim
        FovStatusText.Visible = true
        
        -- Metin konumunu, çemberin biraz üstünde olacak şekilde ayarla
        -- (Radyusun üstüne 15 px daha ekleyip yukarı kaydırıyoruz)
        FovStatusText.Position = Vector2.new(
            FovCircle.Position.X, 
            FovCircle.Position.Y - (FovSize + 15)
        )

        -- SilentAimEnabled true ise "ENABLED" ve yeşil, false ise "DISABLED" ve kırmızı
        if SilentAimEnabled then
            FovStatusText.Text = "ENABLED"
            FovStatusText.Color = Color3.fromRGB(0, 255, 0)
        else
            FovStatusText.Text = "DISABLED"
            FovStatusText.Color = Color3.fromRGB(255, 0, 0)
        end
    else
        -- FOV kapalıysa çember ve metin gizlensin
        FovCircle.Visible = false
        FovStatusText.Visible = false
    end
end)

--------------------------------------------------------------------------------
-- 5) KONTROL FONKSİYONLARI (TeamCheck, KnockCheck, VisibleCheck, vb.)
--------------------------------------------------------------------------------

local function IsOnSameTeam(player)
    if not TeamCheck then return true end

    local localTeam = game:GetService("Players").LocalPlayer.Team
    local targetTeam = player.Team
    if not localTeam or not targetTeam then
        return false
    end
    
    -- Örnek TeamCheck: Citizen vs Police
    if localTeam.Name == "Citizen" and targetTeam.Name ~= "Police" then
        return false
    end

    if localTeam.Name == "Police" and targetTeam.Name ~= "Citizen" then
        return false
    end

    return true
end

local function isKnocked(player)
    if not KnockedCheck then return false end
    local character = player.Character
    if character and character:FindFirstChild("Humanoid") then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            return humanoid.Health <= (humanoid.MaxHealth * 0.2)
        end
    end
    return false
end

local function IsVisible(targetPart)
    if not VisibleCheck then return true end
    local origin = game:GetService("Players").LocalPlayer.Character.Head.Position
    local direction = (targetPart.Position - origin).Unit * 1000
    local params = RaycastParams.new()
    params.FilterDescendantsInstances = { game:GetService("Players").LocalPlayer.Character }
    params.FilterType = Enum.RaycastFilterType.Blacklist

    local result = game:GetService("Workspace"):Raycast(origin, direction, params)
    return (result and result.Instance and result.Instance:IsDescendantOf(targetPart.Parent)) or false
end

local function calculatePrediction(player, targetPartName)
    if not PredictionEnabled then
        return player.Character[targetPartName].Position
    end
    
    local character = player.Character
    local targetPart = character:FindFirstChild(targetPartName)
    if not targetPart then
        -- Varsayılan: HumanoidRootPart
        return character:FindFirstChild("HumanoidRootPart").Position
    end

    local targetPosition = targetPart.Position
    local targetVelocity = targetPart.Velocity or Vector3.new(0, 0, 0)
    -- Örnek olarak 0.2 sn ileri tahmin
    return targetPosition + (targetVelocity * 0.2)
end

--------------------------------------------------------------------------------
-- 6) SİLENT AIM - ATEŞ ETME FONKSİYONU
--------------------------------------------------------------------------------

local function fireAtPlayer(player)
    if player and player.Character then
        local localChar = game:GetService("Players").LocalPlayer.Character
        if not localChar then return end

        -- Örnek: LocalPlayer karakterinde bir silah (Tool) bulalım
        local weapon = localChar:FindFirstChildWhichIsA("Tool")
        if not weapon then
            return
        end

        -- Seçili vurulacak parçalar üzerinden döngü
        for _, targetPartName in ipairs(SelectedHitParts) do
            local targetPart = player.Character:FindFirstChild(targetPartName)
            if targetPart then
                local predictedPosition = calculatePrediction(player, targetPartName)
                local direction = (predictedPosition - localChar.Head.Position).Unit
                
                local args = {
                    weapon,
                    predictedPosition,
                    direction
                }

                -- Örnek Remote: game.ReplicatedStorage.jX2.af72bcad-...
                -- Kendinize göre değiştirin
                game:GetService("ReplicatedStorage")
                    :WaitForChild("3ZJ")
                    :WaitForChild("37dc945e-7f47-4c09-ae80-3fa9ebd707bd")
                    :FireServer(unpack(args))
            end
        end
    end
end

--------------------------------------------------------------------------------
-- 7) EN YAKIN HEDEFİ BULAN FONKSİYON (FOV içi, TeamCheck vb.)
--------------------------------------------------------------------------------

local function GetNearestTarget()
    local closestPlayer = nil
    local shortestDistance = FovSize

    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player ~= game:GetService("Players").LocalPlayer and player.Character then
            for _, partName in ipairs(SelectedHitParts) do
                local targetPart = player.Character:FindFirstChild(partName)
                if targetPart
                   and not isKnocked(player)
                   and IsOnSameTeam(player)
                   and IsVisible(targetPart) 
                then
                    -- Ekran mesafesi
                    local screenPos = 
                        game:GetService("Workspace").CurrentCamera:WorldToScreenPoint(targetPart.Position)
                    local distance = (
                        Vector2.new(screenPos.X, screenPos.Y)
                        - Vector2.new(FovCircle.Position.X, FovCircle.Position.Y)
                    ).Magnitude

                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestPlayer = player
                    end
                end
            end
        end
    end

    return closestPlayer
end

--------------------------------------------------------------------------------
-- 8) SİLENT AIM ANA DÖNGÜ (Her Stepped'da hedefi bul, ateş et)
--------------------------------------------------------------------------------

game:GetService("RunService").Stepped:Connect(function()
    if SilentAimEnabled then
        local target = GetNearestTarget()
        if target then
            fireAtPlayer(target)
        end
    end
end)

SilentAimSection:AddBind({
	Name = "Enable AutoShoot (Keybind)",
	Default = Enum.KeyCode.E,
	Hold = false,
	Callback = function()
		SilentAimEnabled = not SilentAimEnabled

		-- İsterseniz bir print veya bildirim:
		if AimbotEnabled then
			print("Aimbot is now ON")
		else
			print("Aimbot is now OFF")
		end
	end
})
--------------------------------------------------------------------------------
-- 9) TEK SEFER OLUŞAN "Enable Mobile Button" TOGGLE & TEXTBUTTON
--------------------------------------------------------------------------------

local MobileButtonToggle  -- Toggle nesnesi (kütüphaneye göre)
local MobileSilentAimButton -- Buton
local mobileButtonCreated = false -- Buton henüz oluşturulmadı

MobileButtonToggle = SilentAimSection:AddToggle({
    Name = "Enable Mobile Button",
    Default = false,
    Callback = function(Value)
        if not mobileButtonCreated then
            mobileButtonCreated = true

            local screenGui = Instance.new("ScreenGui")
            screenGui.Name = "MobileSilentAim_ScreenGui"
            screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

            MobileSilentAimButton = Instance.new("TextButton")
            MobileSilentAimButton.Name = "MobileSilentAimButton"
            MobileSilentAimButton.Size = UDim2.new(0, 140, 0, 50)
            MobileSilentAimButton.Position = UDim2.new(0, 100, 0, 100) 
            MobileSilentAimButton.Text = "Silent Aim: Off"
            MobileSilentAimButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Kırmızı (Off)
            MobileSilentAimButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            MobileSilentAimButton.Visible = false
            MobileSilentAimButton.Parent = screenGui

            -- Butona tıklayınca Silent Aim aç/kapa
            MobileSilentAimButton.MouseButton1Click:Connect(function()
                SilentAimEnabled = not SilentAimEnabled
                if SilentAimEnabled then
                    MobileSilentAimButton.Text = "Silent Aim: On"
                    MobileSilentAimButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Yeşil (On)
                else
                    MobileSilentAimButton.Text = "Silent Aim: Off"
                    MobileSilentAimButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Kırmızı (Off)
                end
            end)

            -- Basit sürüklenebilirlik
            local UserInputService = game:GetService("UserInputService")
            local dragging = false
            local dragStart, startPos

            MobileSilentAimButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 
                   or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = MobileSilentAimButton.Position
                end
            end)

            UserInputService.InputChanged:Connect(function(input)
                if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement 
                                 or input.UserInputType == Enum.UserInputType.Touch) then
                    local delta = input.Position - dragStart
                    MobileSilentAimButton.Position = UDim2.new(
                        startPos.X.Scale, 
                        startPos.X.Offset + delta.X, 
                        startPos.Y.Scale, 
                        startPos.Y.Offset + delta.Y
                    )
                end
            end)

            MobileSilentAimButton.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 
                   or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = false
                end
            end)
        end

        -- Toggle'a göre butonun görünürlüğü
        if MobileSilentAimButton then
            MobileSilentAimButton.Visible = Value
        end
    end
})

--------------------------------------------------------------------------------
-- KODUN SONU
--------------------------------------------------------------------------------
-- 1) AIMBOT TAB VE SECTION
--------------------------------------------------------------------------------

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local AimFOV = 42
local smoothing = 0.5  
local maxTargetDistance = 500 
local predictionFactor = 0.0575 
local predictToggle = false
local lockPart = "HumanoidRootPart" 
local aimbotEnabled = false  
local fovCircleEnabled = false  
local fovColor = Color3.fromRGB(255, 255, 255)  

local function removeMobileGui()
    if aimbotGui then
        aimbotGui:Destroy()
        aimbotGui = nil
        aimbotButton = nil
    end
end

local function createMobileGui()
    if aimbotGui then return fovCircleEnabled end

    aimbotGui = Instance.new("ScreenGui")
    aimbotGui.Name = "MobileAimbotGui"
    aimbotGui.Parent = game.Players.LocalPlayer:FindFirstChild("PlayerGui")

    aimbotButton = Instance.new("TextButton")
    aimbotButton.Size = UDim2.new(0, 200, 0, 50)
    aimbotButton.Position = UDim2.new(0.5, -100, 0.8, 0)
    aimbotButton.Text = "Aimbot: OFF"
    aimbotButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) 
    aimbotButton.TextColor3 = Color3.fromRGB(255, 255, 255) 
    aimbotButton.Font = Enum.Font.SourceSans
    aimbotButton.TextSize = 24
    aimbotButton.Parent = aimbotGui

    Instance.new("UICorner", aimbotButton)

    aimbotButton.MouseButton1Click:Connect(function()
        aimbotEnabled = not aimbotEnabled  -- Aimbot değişkenini değiştir

        if aimbotEnabled then
            aimbotButton.Text = "Aimbot: ON"
            aimbotButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) 
        else
            aimbotButton.Text = "Aimbot: OFF"
            aimbotButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) 
        end
    end)

    local dragging = false
    local dragStart = nil
    local startPos = nil

    aimbotButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = aimbotButton.Position
        end
    end)

    aimbotButton.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            aimbotButton.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    aimbotButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

end

local AimbotTab = Window:MakeTab({
    Name = "│Aimbot",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})  

local FOVring = Drawing.new("Circle")
FOVring.Visible = false 
FOVring.Thickness = 1
FOVring.Radius = AimFOV
FOVring.Transparency = 1
FOVring.Color = fovColor
FOVring.Position = workspace.CurrentCamera.ViewportSize / 2

AimbotTab:AddToggle({
    Name = "Aimbot",
    Default = false,
    Callback = function(value)
        aimbotEnabled = value
    end    
})

AimbotTab:AddToggle({
    Name = "Mobile Aimbot",
    Default = false,
    Callback = function(value)
        mobileAimbotEnabled = value

        if mobileAimbotEnabled then
            createMobileGui() 
        else
            removeMobileGui()
        end
    end
})

AimbotTab:AddBind({
    Name = "Aimbot Keybind",
    Default = Enum.KeyCode.V, 
    Hold = false,
    Callback = function()
        aimbotEnabled = not aimbotEnabled 
        FOVring.Visible = aimbotEnabled
    end    
})

AimbotTab:AddDropdown({
    Name = "Shot",
    Default = "Body",  
    Options = {"Head", "Body"},  
    Callback = function(value)
        lockPart = value == "Body" and "HumanoidRootPart" or value  
    end
})

AimbotTab:AddToggle({
    Name = "Prediction",
    Default = false,
    Callback = function(value)
        predictToggle = value
    end    
})

AimbotTab:AddToggle({
    Name = "FOV Circle",
    Default = false,
    Callback = function(value)
        fovCircleEnabled = value
        FOVring.Visible = value
    end    
})

AimbotTab:AddSlider({
    Name = "FOV",
    Min = 10,
    Max = 200,
    Default = 90,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "",
    Callback = function(value)
        AimFOV = value
        FOVring.Radius = value
    end
})

AimbotTab:AddSlider({
    Name = "Smoothness",
    Min = 1,
    Max = 10,
    Default = 5,
    Increment = 1,
    Color = Color3.fromRGB(255,255,255),
    ValueName = "",
    Callback = function(value)
        smoothing = (10 - value) / 10  -- Kaydırıcıdaki değeri tersine çevir
    end
})

AimbotTab:AddColorpicker({
    Name = "FOV Color",
    Default = Color3.fromRGB(255, 255, 255), 
    Callback = function(value)
        fovColor = value
        FOVring.Color = value
    end
})

local function isWithinDistance(targetPart)
    local distance = (workspace.CurrentCamera.CFrame.Position - targetPart.Position).Magnitude
    return distance <= maxTargetDistance
end

local function getClosest()
    local target = nil
    local shortestDistance = math.huge
    local screenCenter = workspace.CurrentCamera.ViewportSize / 2

    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild(lockPart) then
            local targetPart = v.Character[lockPart]
            local screenPoint, onScreen = workspace.CurrentCamera:WorldToViewportPoint(targetPart.Position)
            local distanceFromCenter = (Vector2.new(screenPoint.X, screenPoint.Y) - screenCenter).Magnitude

            if onScreen and distanceFromCenter <= AimFOV and distanceFromCenter < shortestDistance then
                shortestDistance = distanceFromCenter
                target = v
            end
        end
    end
    return target
end

local function predictPosition(target)
    if target and target.Character and target.Character:FindFirstChild(lockPart) then
        local velocity = target.Character[lockPart].Velocity
        local position = target.Character[lockPart].Position
        return predictToggle and (position + (velocity * predictionFactor)) or position
    end
    return nil
end

RunService.RenderStepped:Connect(function()
    if aimbotEnabled then
        FOVring.Position = workspace.CurrentCamera.ViewportSize / 2
        FOVring.Visible = fovCircleEnabled

        if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
            local currentTarget = getClosest()
            if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild(lockPart) then
                local predictedPosition = predictPosition(currentTarget)
                if predictedPosition then
                    workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(CFrame.new(workspace.CurrentCamera.CFrame.Position, predictedPosition), smoothing)
                end
            end
        end
    end
end)

local Tab5 = Window:MakeTab({
    Name = "│Gun Mod's",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local player = game.Players.LocalPlayer
local tools = {'G36', 'M4 Carbine', 'M58B Shotgun', 'MP5', 'Glock 17', 'Sniper'}
local attributeDefaults = {}
local isToggleActive = {
    FastBullet = false,
    ExtraStability = false,
    NoRecoil = false,
    NoAimDelay = false,
    MinCrosshairGun = false
}

local function saveToolAttribute(tool, attributeName)
    local currentValue = tool:GetAttribute(attributeName)
    if currentValue and not attributeDefaults[tool.Name] then
        attributeDefaults[tool.Name] = {}
    end
    if currentValue then
        attributeDefaults[tool.Name][attributeName] = currentValue
    end
end

local function resetToolAttribute(tool, attributeName)
    local defaultValues = attributeDefaults[tool.Name]
    if defaultValues and defaultValues[attributeName] then
        pcall(function()
            tool:SetAttribute(attributeName, defaultValues[attributeName])
        end)
    end
end

local function modifyToolAttribute(tool, attributeName, value)
    if tool:GetAttribute(attributeName) ~= value then
        pcall(function()
            tool:SetAttribute(attributeName, value)
        end)
    end
end

local function processTool(tool, attributeName, toggleKey)
    if tool then
        saveToolAttribute(tool, attributeName)
        if isToggleActive[toggleKey] then
            modifyToolAttribute(tool, attributeName, 0)
        end

        tool:GetAttributeChangedSignal(attributeName):Connect(function()
            if isToggleActive[toggleKey] then
                modifyToolAttribute(tool, attributeName, 0)
            end
        end)
    end
end

local function processCharacterTools(attributeName, toggleKey)
    if player.Character then
        for _, toolName in ipairs(tools) do
            local tool = player.Character:FindFirstChild(toolName)
            if tool then
                processTool(tool, attributeName, toggleKey)
            end
        end
    end
end

local function resetCharacterTools(attributeName)
    if player.Character then
        for _, toolName in ipairs(tools) do
            local tool = player.Character:FindFirstChild(toolName)
            if tool then
                resetToolAttribute(tool, attributeName)
            end
        end
    end
end

local function addToggle(name, attributeName, toggleKey)
    Tab5:AddToggle({
        Name = name,
        Default = false,
        Callback = function(Value)
            isToggleActive[toggleKey] = Value
            if Value then
                processCharacterTools(attributeName, toggleKey)
            else
                resetCharacterTools(attributeName)
            end
        end
    })
end

player.CharacterAdded:Connect(function()
    attributeDefaults = {}
    for _, toolName in ipairs(tools) do
        local tool = player.Character:FindFirstChild(toolName)
        if tool then
            for key, _ in pairs(isToggleActive) do
                processTool(tool, key, key)
            end
        end
    end
    player.Character.ChildAdded:Connect(function(child)
        if table.find(tools, child.Name) then
            for key, _ in pairs(isToggleActive) do
                processTool(child, key, key)
            end
        end
    end)
end)

-- Initialize Toggles
addToggle("Fast Bullet", "ShootDelay", "FastBullet")
addToggle("Extra Stability", "ShootDelay", "ExtraStability")
addToggle("No-Recoil", "Recoil", "NoRecoil")
addToggle("No-AimDelay", "AimDelay", "NoAimDelay")
addToggle("Min Crosshair Gun", "CrosshairSize", "MinCrosshairGun")

local Tab6 = Window:MakeTab({
	Name = "│Pro Mod's",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
----------------------------

local function getCharacter()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    return character, humanoid
end

local character, humanoid = getCharacter()

local seatPartConnection

local function setupSeatPartListener()
    if seatPartConnection then
        seatPartConnection:Disconnect()
    end

    seatPartConnection = humanoid:GetPropertyChangedSignal("SeatPart"):Connect(function()
        local seatPart = humanoid.SeatPart
        if seatPart then
            local greatGrandParent = seatPart.Parent and seatPart.Parent.Parent and seatPart.Parent.Parent.Parent
            if greatGrandParent then
                local playerName = greatGrandParent.Name

                local targetPlayer = game.Players:FindFirstChild(playerName)
                if targetPlayer and targetPlayer.TeamColor == BrickColor.new("Bright blue") then
                    humanoid.Sit = false

                    local animateScript = character:FindFirstChild("Animate")
                    if animateScript then
                        animateScript.Enabled = false
                        wait(0.1)
                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        wait(0.1)
                        animateScript.Enabled = true
                    end
                end
            end
        end
    end)
end

Tab6:AddToggle({
    Name = "AutoEspace (Police Car)",
    Default = false,
    Callback = function(Value)
        if Value then
            setupSeatPartListener()
        else
            if seatPartConnection then
                seatPartConnection:Disconnect()
            end
        end
    end
})

player.CharacterAdded:Connect(function()
    wait(0.1)
    character, humanoid = getCharacter()
end)

Tab6:AddButton({
	Name = "Steal Nearest Bike",
	Callback = function()

		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart

		local function isUUID(name)
			local pattern = "^%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x$"
			return string.match(name, pattern) ~= nil
		end

		local function onCharacterAdded(newCharacter)
			character = newCharacter
			humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		end

		player.CharacterAdded:Connect(onCharacterAdded)
		if player.Character then
			onCharacterAdded(player.Character)
		end

		local vehiclesFolder = workspace:WaitForChild("Vehicles")

		local function findNearestDriveSeat()
			local closestDistance = math.huge
			local closestSeat = nil

			for _, vehicle in ipairs(vehiclesFolder:GetChildren()) do
				if isUUID(vehicle.Name) then
					local driveSeat = vehicle:FindFirstChild("DriveSeat", true)
					if driveSeat and driveSeat:IsA("Seat") then
						local distance = (driveSeat.Position - humanoidRootPart.Position).Magnitude
						if distance < closestDistance then
							closestDistance = distance
							closestSeat = driveSeat
						end
					end
				end
			end

			return closestSeat
		end

		local seat = findNearestDriveSeat()
		if seat then
			seat:Sit(character:WaitForChild("Humanoid"))
		end
	end    
})

local button = script.Parent
local player = game.Players.LocalPlayer -- Oyuncu
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

Tab6:AddButton({
    Name = "Jump from Vehicle//Seat",
    Callback = function()
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
})

Tab6:AddToggle({
    Name = "Anti-Arrest",
    Default = false,
    Callback = function(Value)
        repelActive = Value
        if repelActive then
        else
        end
    end    
})

Tab6:AddSlider({
    Name = "Safe Distance for Anti-Arrest",
    Min = 0,
    Max = 40,
    Default = 35,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Studs",
    Callback = function(Value)
        searchRadius = Value
        safeDistance = Value
    end    
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Character
local HumanoidRootPart

local tweenCache = {}

local function updateCharacter()
    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
end

updateCharacter()

LocalPlayer.CharacterAdded:Connect(function()
    wait(0.1)
    updateCharacter()
end)

local function isEnemy(player)
    if player == LocalPlayer or not player.Character then return false end
    local teamColor = player.TeamColor
    return teamColor == BrickColor.new("Bright blue")
end

local function getNearbyEnemies()
    local enemies = {}
    for _, player in pairs(Players:GetPlayers()) do
        if isEnemy(player) then
            local enemyCharacter = player.Character
            if enemyCharacter then
                local enemyRootPart = enemyCharacter:FindFirstChild("HumanoidRootPart")
                if enemyRootPart then
                    local distance = (HumanoidRootPart.Position - enemyRootPart.Position).Magnitude
                    if distance < searchRadius then
                        table.insert(enemies, {rootPart = enemyRootPart, distance = distance})
                    end
                end
            end
        end
    end
    return enemies
end

local function repelFromEnemy(enemyData)
    local enemyRootPart = enemyData.rootPart
    local distance = enemyData.distance

    local direction = (HumanoidRootPart.Position - enemyRootPart.Position).Unit
    local newPosition = HumanoidRootPart.Position + direction * (safeDistance - distance)

    if tweenCache[HumanoidRootPart] then
        tweenCache[HumanoidRootPart]:Cancel()
    end

    local tween = TweenService:Create(
        HumanoidRootPart,
        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
        {CFrame = CFrame.new(newPosition)}
    )
    tween:Play()
    tweenCache[HumanoidRootPart] = tween
end

RunService.RenderStepped:Connect(function()
    if not repelActive or not HumanoidRootPart then return end

    local enemies = getNearbyEnemies()
    if #enemies > 0 then
        table.sort(enemies, function(a, b) return a.distance < b.distance end)
        repelFromEnemy(enemies[1])
    end
end)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if isEnemy(player) then
            wait(0.1)
        end
    end)
end)

local Tab7 = Window:MakeTab({
    Name = "│Crim/Cop Mod's",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

gameServices = {
    ReplicatedStorage = game:GetService("ReplicatedStorage"),
    Workspace = game:GetService("Workspace"),
    Players = game:GetService("Players")
}

localPlayer = gameServices.Players.LocalPlayer
radarEvent = gameServices.ReplicatedStorage:WaitForChild("3ZJ"):WaitForChild("0590fa6a-adc6-4497-9098-e146bb954efc")

function tryGetRadarGun()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    return character:FindFirstChild("Radar Gun")
end

function fireRadarAtAllVehicles(radarGun)
    local radarGunHandle = radarGun:FindFirstChild("Handle")
    if not radarGunHandle then
        OrionLib:MakeNotification({
            Name = "Radar Hatası",
            Content = "Radar Gun'ın 'Handle' parçası bulunamadı!",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
        return
    end
    
    for _, vehicle in pairs(gameServices.Workspace.Vehicles:GetChildren()) do
        local driveSeat = vehicle:FindFirstChild("DriveSeat")
        if driveSeat and driveSeat:IsA("VehicleSeat") then
            local radarPosition = radarGunHandle.Position
            local targetPosition = driveSeat.Position
            local direction = (targetPosition - radarPosition).Unit
            radarEvent:FireServer(radarGun, radarPosition, direction)
        end
    end
end

radarEnabled = false
Tab7:AddToggle({
    Name = "│Police│ Auto Radar Gun Farm",
    Default = false,
    Callback = function(Value)
        radarEnabled = Value
        if radarEnabled then
            task.spawn(function()
                while radarEnabled do
                    local radarGun = tryGetRadarGun()
                    if radarGun then
                        fireRadarAtAllVehicles(radarGun)
                        task.wait(1)
                    else
                        OrionLib:MakeNotification({
                            Name = "Radar Gun Not Found",
                            Content = "Equip your Radar Gun!",
                            Image = "rbxassetid://4483345998",
                            Time = 5
                        })
                        task.wait(3)
                    end
                end
            end)
        end
    end
})

local arresting, arrestDistance = false, 5

Tab7:AddToggle({
    Name = "│Police│ Auto-Arrest",
    Default = false,
    Callback = function(Value) arresting = Value end
})

Tab7:AddSlider({
    Name = "│Police│ Auto-Arrest Distance",
    Min = 0,
    Max = 15,
    Default = 5,
    Increment = 1,
    ValueName = "distance",
    Callback = function(Value) arrestDistance = Value end
})

local function performArresting()
    if not arresting then return end
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= localPlayer then
            pcall(function()
                local plrChar = plr.Character
                if plrChar and plrChar:FindFirstChild("HumanoidRootPart") and plrChar.HumanoidRootPart:GetAttribute("IsWanted") then
                    local dist = (plrChar.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
                    if dist < arrestDistance and not plrChar:GetAttribute("isCuffed") and plrChar.Humanoid.Health >= 25 then
                        
                        ReplicatedStorage:WaitForChild("jX2"):WaitForChild("0d2961ce-b33c-4566-a116-7ad73b57101a"):FireServer("Handcuffs")

                        
                        ReplicatedStorage:WaitForChild("jX2"):WaitForChild("4a676a80-4436-430c-8e6a-57c84cd8a5f3"):FireServer(plrChar.HumanoidRootPart, "051")
                    end
                end
            end)
        end
    end
end

task.spawn(function()
    while task.wait(0.5) do performArresting() end
end)

TaserEnabled = false
Tab7:AddToggle({
    Name = "│Police│ Auto-Taser Shoot",
    Default = false,
    Callback = function(Value)
        TaserEnabled = Value
    end
})

Players = game:GetService("Players")
ReplicatedStorage = game:GetService("ReplicatedStorage")
RunService = game:GetService("RunService")
Workspace = game:GetService("Workspace")

LocalPlayer = Players.LocalPlayer
PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
TargetColor = Color3.fromRGB(231, 76, 60)
MaxDistance = 20

function findScreenGui()
    for _, gui in ipairs(PlayerGui:GetChildren()) do
        if gui:IsA("ScreenGui") and gui.DisplayOrder == 27 then
            return gui
        end
    end
    return nil
end

function getCriminalNames(frame3)
    local criminalNames = {}
    for _, child in ipairs(frame3:GetChildren()) do
        if child:IsA("ImageButton") and child.ImageColor3 == TargetColor then
            table.insert(criminalNames, child.Name)
        end
    end
    return criminalNames
end

function findFrame3()
    local screenGui = findScreenGui()
    if not screenGui then return nil end

    local frame = screenGui:FindFirstChildWhichIsA("Frame")
    if not frame then return nil end

    local imageLabel3 = frame:FindFirstChild("3")
    if not imageLabel3 or not imageLabel3:IsA("ImageLabel") then return nil end

    local frame4 = imageLabel3:FindFirstChild("4")
    if not frame4 then return nil end

    local frame3 = frame4:FindFirstChild("3")
    return frame3
end

function isKnocked(player)
    if not player.Character or not player.Character:FindFirstChild("Humanoid") then
        return false
    end
    return player.Character.Humanoid.Health <= (player.Character.Humanoid.MaxHealth * 0.2)
end

local function isVisible(targetPart)
    if not VisibilityCheckEnabled then return true end
    local origin = game:GetService("Players").LocalPlayer.Character.Head.Position
    local direction = (targetPart.Position - origin).Unit * 1000
    local params = RaycastParams.new()
    params.FilterDescendantsInstances = { game:GetService("Players").LocalPlayer.Character }
    params.FilterType = Enum.RaycastFilterType.Blacklist
    local result = game:GetService("Workspace"):Raycast(origin, direction, params)
    return result == nil or result.Instance:IsDescendantOf(targetPart.Parent)
end

function calculatePrediction(targetPlayer)
    local targetPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not targetPart then return targetPlayer.Character.HumanoidRootPart.Position end

    local targetPosition = targetPart.Position
    local targetVelocity = targetPart.Velocity or Vector3.new(0, 0, 0)
    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() / 1000

    return targetPosition + (targetVelocity * ping)
end

function getNearestCriminal()
    local frame3 = findFrame3()
    if not frame3 then return nil end

    local criminalNames = getCriminalNames(frame3)
    if #criminalNames == 0 then return nil end

    local nearestPlayer = nil
    local shortestDistance = MaxDistance

    for _, playerName in ipairs(criminalNames) do
        local player = Players:FindFirstChild(playerName)
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance <= MaxDistance and not isKnocked(player) and isVisible(player) then
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end

    return nearestPlayer
end

function taserCheck()
    local weapon = LocalPlayer.Character:FindFirstChild("Taser")
    return weapon ~= nil
end

function fireTaser()
    if not TaserEnabled or not taserCheck() then return end

    local targetPlayer = getNearestCriminal()
    if targetPlayer and targetPlayer.Character then
        local predictedPosition = calculatePrediction(targetPlayer)

        local args = {
            LocalPlayer.Character:WaitForChild("Taser"),
            predictedPosition,
            (predictedPosition - LocalPlayer.Character.HumanoidRootPart.Position).Unit
        }

        ReplicatedStorage:WaitForChild("jX2"):WaitForChild("58f0accf-277b-4960-b19a-13a4c426ae5c"):FireServer(unpack(args))
    end
end

RunService.Heartbeat:Connect(function()
    fireTaser()
end)

local Players, ReplicatedStorage, RunService, Workspace = game:GetService("Players"), game:GetService("ReplicatedStorage"), game:GetService("RunService"), game:GetService("Workspace")

local localPlayer, playerGui = Players.LocalPlayer, Players.LocalPlayer:WaitForChild("PlayerGui")

local targetColor, espEnabled, markerSize = Color3.fromRGB(231, 76, 60), false, 5

local currentNames, playerIndicators = {}, {}

local function findScreenGui()
	for _, gui in ipairs(playerGui:GetChildren()) do
		if gui:IsA("ScreenGui") and gui.DisplayOrder == 27 then
			return gui
		end
	end
	return nil
end

local function findFrame3()
	local screenGui = findScreenGui()
	if not screenGui then return nil end

	local frame = screenGui:FindFirstChildWhichIsA("Frame")
	if not frame then return nil end

	local imageLabel3 = frame:FindFirstChild("3")
	if not imageLabel3 or not imageLabel3:IsA("ImageLabel") then return nil end

	local frame4 = imageLabel3:FindFirstChild("4")
	if not frame4 then return nil end

	local frame3 = frame4:FindFirstChild("3")
	return frame3
end

local function getTargetButtonNames(frame3)
	local targetNames = {}
	for _, child in ipairs(frame3:GetChildren()) do
		if child:IsA("ImageButton") and child.ImageColor3 == targetColor then
			table.insert(targetNames, child.Name)
		end
	end
	return targetNames
end

local function findPlayerModel(playerName)
	for _, child in ipairs(Workspace:GetChildren()) do
		if child:IsA("Model") and child.Name == playerName then
			return child
		end
	end
	return nil
end

local function createIndicator(playerModel)
	local head = playerModel:FindFirstChild("Head")
	if not head then return nil end

	local verticalLine, leftLine, rightLine = Drawing.new("Line"), Drawing.new("Line"), Drawing.new("Line")
	for _, line in ipairs({verticalLine, leftLine, rightLine}) do
		line.Thickness, line.Transparency = 2, 1
	end

	return {
		vertical = verticalLine,
		left = leftLine,
		right = rightLine,
		target = head
	}
end

local function clearIndicator(indicator)
	if indicator then
		for _, line in pairs(indicator) do
			if line.Remove then line:Remove() end
		end
	end
end

local function updateESPList(newNames)
	for playerName, indicator in pairs(playerIndicators) do
		if not table.find(newNames, playerName) then
			clearIndicator(indicator)
			playerIndicators[playerName] = nil
		end
	end

	for _, playerName in ipairs(newNames) do
		if not playerIndicators[playerName] then
			local playerModel = findPlayerModel(playerName)
			if playerModel then
				playerIndicators[playerName] = createIndicator(playerModel)
			end
		end
	end
end

local function updateAllIndicators()
	for playerName, indicator in pairs(playerIndicators) do
		if indicator and indicator.target and indicator.target:IsA("BasePart") then
			local screenPos, onScreen = Workspace.CurrentCamera:WorldToViewportPoint(indicator.target.Position + Vector3.new(0, 2, 0))
			if onScreen then
				local x, y, size = screenPos.X, screenPos.Y, markerSize

				
				indicator.vertical.Visible = true
				indicator.vertical.From, indicator.vertical.To = Vector2.new(x, y), Vector2.new(x, y + size * 6)

				
				indicator.left.Visible = true
				indicator.left.From, indicator.left.To = Vector2.new(x, y + size * 6), Vector2.new(x - size * 2, y + size * 4)

				
				indicator.right.Visible = true
				indicator.right.From, indicator.right.To = Vector2.new(x, y + size * 6), Vector2.new(x + size * 2, y + size * 4)
			else
				for _, line in pairs(indicator) do
					if line.Visible ~= nil then line.Visible = false end
				end
			end
		else
			for _, line in pairs(indicator) do
				if line.Visible ~= nil then line.Visible = false end
			end
		end
	end
end

RunService.Heartbeat:Connect(function()
	if not espEnabled then
		if #currentNames > 0 then
			currentNames = {}
			for playerName, indicator in pairs(playerIndicators) do
				clearIndicator(indicator)
				playerIndicators[playerName] = nil
			end
		end
		return
	end

	local frame3 = findFrame3()
	if frame3 then
		local newNames = getTargetButtonNames(frame3)
		if #newNames ~= #currentNames or table.concat(newNames) ~= table.concat(currentNames) then
			currentNames = newNames
			updateESPList(currentNames)
		end
		updateAllIndicators()
	else
		if #currentNames > 0 then
			currentNames = {}
			for playerName, indicator in pairs(playerIndicators) do
				clearIndicator(indicator)
				playerIndicators[playerName] = nil
			end
		end
	end
end)

Tab7:AddToggle({
	Name = "│Police│ Criminal ESP",
	Default = false,
	Callback = function(value)
		espEnabled = value
		if not espEnabled then
			currentNames = {}
			for playerName, indicator in pairs(playerIndicators) do
				clearIndicator(indicator)
				playerIndicators[playerName] = nil
			end
		end
	end
})

Tab7:AddColorpicker({
	Name = "Criminal Esp Color",
	Default = Color3.fromRGB(231, 76, 60),
	Callback = function(value)
		targetColor = value
	end
})

Tab7:AddSlider({
	Name = "Criminal ESP Size",
	Min = 1,
	Max = 20,
	Default = 5,
	Increment = 1,
	ValueName = "size",
	Callback = function(value)
		markerSize = value
	end
})

local Section = Tab7:AddSection({
    Name = "--------------------------------------------------------------------------------------------"
})

local autocollecting = false
local crimeautofarm = false
local collectDistance = 10 
local collectDelay = 0.1 

task.spawn(function()
    while true do
        if autocollecting or crimeautofarm then
            -- Drops colect
            for _, drop in pairs(workspace.Drops:GetChildren()) do
                if drop.Name == localPlayer.Name then
                    local args1 = { [1] = drop, [2] = "zkY" }
                    game:GetService("ReplicatedStorage"):WaitForChild("3ZJ"):WaitForChild("d826b47c-2853-4585-b67f-804febe691ac"):FireServer(unpack(args1))

                    local args2 = { [1] = drop, [2] = "YgB" }
                    game:GetService("ReplicatedStorage"):WaitForChild("3ZJ"):WaitForChild("d826b47c-2853-4585-b67f-804febe691ac"):FireServer(unpack(args2))
                end
            end

            -- Robbery money collect
            for _, money in pairs(workspace.Robberies:GetDescendants()) do
                if money:IsA("BasePart") or money:IsA("MeshPart") then
                    local distance = (money.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
                    if distance < collectDistance and money.Transparency == 0 then
                        if money.Parent.Name == "Money" then
                            local args = { [1] = money, [2] = "a64" }
                            game:GetService("ReplicatedStorage"):WaitForChild("3ZJ"):WaitForChild("d826b47c-2853-4585-b67f-804febe691ac"):FireServer(unpack(args))
                        end
                    end
                end
            end

            -- Diğer objeleri toplama
            for _, item in pairs(workspace.Robberies:GetDescendants()) do
                if item:IsA("BasePart") or item:IsA("MeshPart") then
                    local distance = (item.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
                    if distance < collectDistance and item.Transparency == 0 then
                        local args = { [1] = item, [2] = "lgJ" }
                        game:GetService("ReplicatedStorage"):WaitForChild("3ZJ"):WaitForChild("d826b47c-2853-4585-b67f-804febe691ac"):FireServer(unpack(args))
                    end
                end
            end

            task.wait(collectDelay)
        else
            task.wait(0.5)
        end
    end
end)

-- Toggle: Auto Collect and Crime Auto Farm
Tab7:AddToggle({
    Name = "│Criminal │Toggle Auto Collect and Crime Auto Farm",
    Default = false,
    Callback = function(Value)
        autocollecting = Value
        crimeautofarm = Value
    end
})

-- Slider: Collect Distance
Tab7:AddSlider({
    Name = "│Criminal │Collect Distance",
    Min = 0,
    Max = 40,
    Default = 10,
    Increment = 1,
    ValueName = "distance",
    Callback = function(Value)
        collectDistance = Value
    end
})

-- Slider: Collect Delay
Tab7:AddSlider({
    Name = "│Criminal │Collect Delay",
    Min = 0.1,
    Max = 2,
    Default = 0.1,
    Increment = 0.1,
    ValueName = "seconds",
    Callback = function(Value)
        collectDelay = Value
    end
})

Trixo:Init()